x[x %in% 1:5] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
x
x[x %in% 1:5] <- 0
x
cube <- function(x, n) {
x^3
}
cube(3)
n
x <- 1:10
if(x > 5) {
x <- 0
}
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
z
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
h(10,,4)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
cube <- function(x, n) {
x^3
}
cube(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(1:10)
x<-1:10
cachemean(x)
cachemean <- function(x, ...) {
m <- mean(x)
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(x)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
set
makevector(1:10)
makeVector(1:10)
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(1:100)
cachemean(x)
x<-makeVector(1:10)
x
cachemean(x)
cachemean(x)
x
x$get()
x$set()
x$getMean()
x$getmean()
source('C:/Users/n.debernardi/OneDrive - CRITEO/Documents/Cool courses/R exam/Assignement 2/makeCacheMatrix.R')
source('C:/Users/n.debernardi/OneDrive - CRITEO/Documents/Cool courses/R exam/Assignement 2/cacheSolve.r')
x<-(1:4)
x<- matrix(1:9, nrow = 3, ncol = 3)
x
cache<- makeCacheMatrix(x)
cache
cacheSolve(cache)
x
cacheSolve(cache)
source('C:/Users/n.debernardi/OneDrive - CRITEO/Documents/Cool courses/R exam/Assignement 2/cacheSolve.r')
cacheSolve(cache)
debugSource('C:/Users/n.debernardi/OneDrive - CRITEO/Documents/Cool courses/R exam/Assignement 2/cacheSolve.r')
cacheSolve(cache)
data
solve(data)
data[1,1]<-6
data
solve(data)
cacheSolve(cache)
cache$get
x<-cache$get()
inv<-cache$getinverse()
x
inv
x<- matrix(1:9, nrow = 3, ncol = 3)
x[1,1]<-6
makeCacheMatrix(x)
cache<-makeCacheMatrix(x)
cacheSolve(cache)
cacheSolve(cache)
source('C:/Users/n.debernardi/OneDrive - CRITEO/Documents/Cool courses/R exam/Assignement 2/cachematrix.R')
source('C:/Users/n.debernardi/OneDrive - CRITEO/Documents/Cool courses/R exam/Assignement 2/cachematrix.R')
x<- matrix(1:9, nrow = 3, ncol = 3)
x[1,1]<-6
cache<-makeCacheMatrix(x)
cacheSolve(cache)
cacheSolve(cache)
cache<-makeCacheMatrix(x)
cache
cacheSolve(cache)
cacheSolve(cache)
source('C:/Users/n.debernardi/OneDrive - CRITEO/Documents/Cool courses/R exam/Assignement 2/cachematrix.R')
cache<-makeCacheMatrix(x)
cacheSolve(cache)
source('C:/Users/n.debernardi/OneDrive - CRITEO/Documents/Cool courses/R exam/Assignement 2/cachematrix.R')
cacheSolve(cache)
source('C:/Users/n.debernardi/OneDrive - CRITEO/Documents/Cool courses/R exam/Assignement 2/cachematrix.R')
cacheSolve(cache)
cacheSolve(cache)
cache<-makeCacheMatrix(x)
cacheSolve(cache)
cacheSolve(cache)
source('C:/Users/n.debernardi/OneDrive - CRITEO/Documents/Cool courses/R exam/Assignement 2/cachematrix.R')
install.packages("swirl")
library(swirl)
swirl()
install_from_swirl("R Programming")
library(swirl)
swirl()
1:20
pi:10
15:1
?:
?:
:?
?':'
seq(1,20)
seq(0,10, by=0.5)
seq(5,10, length=30)
my_seq = seq(5,10, length=30)
my_seq <- seq(5,10, length=30)
length(my_seq)
seq(1,length(my_seq))
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,40)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect(0.5,55,-10,6)
num_vect<- c(0.5,55,-10,6)
tf <- num_vect<1
tf
num_vect>=6
c("My","Name","is")
my_char<-c("My","Name","is")
my_char
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name<-c(my_char, "Nico")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X","Y","Z");sep="")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS, 1:4, sep = "-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_na
my_data
0/0
Inf/Inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2<-c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attibutes(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matric
?matrix
matrix(1:20,4,5)
my_matrix2<-matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients<-c("Bill", "Gina", "Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<-c("patient", "age", "weight", "bp", "rating","test")
colnames(my_matrix)<-cnames
colnames(my_matrix)
colnames(my_matrix2)<-cnames
my_matrix2
my_matrix
colnames(my_data) <- cnames
my_data
attributes(my_data)
my_data[,"Patient"]
my_data["Patient",]
my_data[,"age"]
my_data
my_data <- data.frame(patients, patients, my_matrix)
my_data
my_data$patients
my_data[1,]
my_data[,1]
cnames
cnames<-c("patients",cnames)
cnames
colnames(my_data) <- cnames
my_data
my_data$weight
my_data[,"weight"]
my_data[,"patients"]
my_data[,"patient"]
my_data[,1]
my_data[,2]
my_data[,3]
my_data[,6]
load(swirl)
swirl
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
?table
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$red, sum)
tapply(flags$population, flags$landmass, sum)
tapply(flags$population, flags$landmass, summary)
book<- download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv)
book<- download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv')
?download.file
book<- download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv','file_data')
book
file
read?
sdv
?read
ls
environment
read.file
load
load('file_data')
?load
data_file
'data_file'
readcsv
read.table('data_file')
filename = paste(directory,"/",formatC(i, width = 3, format = "d", flag = "0"),".csv",sep = "", collapse = NULL)
filedata <- file(description = filename, open = "r")
datatemp <- read.csv(filedata)
close(filedata)
`getdata%2Fdata%2Fss06hid` <- read.csv("C:\\Users\\N172B~1.DEB\\AppData\\Local\\Temp\\RtmpOgBfiD\\data23c046881fa7")
View(`getdata%2Fdata%2Fss06hid`)
View(`getdata%2Fdata%2Fss06hid`)
data<- getdata%2Fdata%2Fss06hid
data<- `getdata%2Fdata%2Fss06hid`
data
count(data$VAL=24)
sum(data$VAL==24)
(data$VAL==24)
sum(data$VAL==24,na.rm = 1)
`getdata%2Fdata%2Fss06hid` <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx")
output <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx")
output <- read.xls(file="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx")
output <- read.xlsx(file="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx")
output <- read.csv(file="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx")
output <- read.table(file="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx")
require(XLConnect)
load(XLConnect)
library(XML)
fileUrl <- ("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml")
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
install.packages('XML')
library(XML)
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
doc
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml "
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml "
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
doc <- xmlTreeParse(fileUrl)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
doc <- xmlTreeParse(fileUrl)
xmlTreeParse(fileUrl,useInternal=TRUE)
fileUrl
url <-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
output <- read.csv(url)
View(`getdata%2Fdata%2Fss06hid`)
dfkjbg
$
output
done
exit
url <-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
output <- read.csv(url)
load(sqldf)
install.packages('sqldf')
load(sqldf)
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select * from acs")
install.packages('RSQLite')
install.packages("RSQLite")
library(sqldf)
library(RSQLLite)
install.packages("RSQLite")
install.packages("RSQLite")
library(RSQLLite)
library(RSQLLite.extfuns)
install.packages("RSQLite.extfuns")
url <-"http://biostat.jhsph.edu/~jleek/contact.html"
data <- read.csv(url)
data
nbcar("<link rel=stylesheet href=images/PixelGreen.css type=text/css />")
nbchar("<link rel=stylesheet href=images/PixelGreen.css type=text/css />")
nchar("<link rel=stylesheet href=images/PixelGreen.css type=text/css />")
data(10)
data <- read.xml(url)
data.frame(row.names=10)
data2 <- read(url)
data2 <- read.csv(url)
data2
data2(10)
data2(1)
row(data2)
data2[10,]
nchar(data2[10,])
nchar(char(data2[10,])
)
nchar(toString(data2[10,]))
nchar(toString(data2[20,]))
nchar(toString(data2[30,]))
nchar(toString(data2[100,]))
toString(data2[100,])
setwd("Data")
wd
setwd("R/Data")
setwd("~/R/data")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl,destfile = "Quizz1_data_2.xlsx")
library(xlsx)
colIndex <- 18:23
rowIndex<-7:15
dat <- read.xlsx("Quizz1_data_2.xlsx",sheetIndex=1,header=TRUE,colIndex=colIndex,rowIndex=rowIndex)
dat
download.file(fileUrl,destfile = "Quizz1_data_2.xlsx",method=curl)
download.file(fileUrl,destfile = "Quizz1_data_2.xlsx",method="curl")
download.file(fileUrl,destfile = "Quizz1_data_2.xlsx",method = "curl")
download.file(fileUrl,destfile = "Quizz1_data_2.xlsx")
download.file(fileUrl,destfile = "Quizz1_data_2.csv")
colIndex <- 18:23
rowIndex<-7:15
dat <- read.xlsx("DATA.gov_NGAP.xlsx",sheetIndex=1,header=TRUE,colIndex=colIndex,rowIndex=rowIndex)
dat
colIndex <- 7:15
rowIndex<-18:23
dat <- read.xlsx("DATA.gov_NGAP.xlsx",sheetIndex=1,header=TRUE,colIndex=colIndex,rowIndex=rowIndex)
dat
sum(dat$Zip*dat$Ext,na.rm=T)
